[
{
  "model": "blog.post",
  "pk": 9,
  "fields": {
    "post_image": "img/post1.jpg",
    "title": "How to set up your first Django Project",
    "slug": "how-set-your-first-django-project",
    "author": 1,
    "body": "Are you new to django? well django is the web framework for perfectionist with deadline. So today, I will be showing you how to set up your django project for the first time.\r\n\r\nThe first thing you need to do is to download python from <a href=\"https://python.org/\"target=\"blank\">python.org</a> then install it on your machine. After you've successfully installed it  on your machine, create and activate your python virtual environment by running `python -m venv myvenv && source venv/bin/activate`. Finally, you can now install django by running the following command in your terminal: `pip install django`. \r\n\r\nSince you now have python and django installed nd also have your virtual environment activated. Let's create our django project by following the instructions below;\r\n\r\n(1). run `django-admin startproject mydjangoproject`\r\n\r\n(2). navigate to you project dir by running `cd mydjangoproject`\r\n\r\n(3). if you run `tree` your project structure should look as follows:\r\n\r\n![Project Structure](https://mydjangoaccountstorage.blob.core.windows.net/media/img/post1a.png).\r\n\r\nLet's quickly get familiar with some things here. As you can see the project we just created contains another folder that has the same name with our project, that's where the settings and other management files that has to do with our projects are stored. The `settings.py` file is where all settings for our project are defined.`__init__.py` shows that we are working with a python package, `urls.py` is where url mappings for our views are configured we can also create custom `urls.py` file for each application in our project and the include it in our main `urls.py` in our project folder. We'll talk about `asgi.py` and `wsgi.py` when we get to talk about deployment in future blog post.\r\n\r\nNow let create an application:\r\n\r\n(4). run `django-admin startapp mydjangoapp`.\r\n\r\nRun ` cd mydjangoapp` and run `tree` to see the structure of our application. you should have something like this:\r\n\r\n![Project Structure](https://mydjangoaccountstorage.blob.core.windows.net/media/img/post1b.png).\r\n\r\nAlright, let's talk about this a bit. The `admin.py` is where we are going to how we want our models to displayed on the admin view,  `models.py` is where we define our database tables and fields in form of classes and objects. `tests.py` as the name implies, is where we write unit test for our application using TestCase provided by Django. finally  `views.py` is where we write our views... it's more like an intermediary between our templates and our models.\r\n\r\nNow that you are familiar with the project and application structure,  lets see if we've successfully set up our project. Navigate to `settings.py` and go to the section where we have INSTALLED APPS then add our application to the list of INSTALLED APPS like this:\r\n\r\n![Project Structure](https://mydjangoaccountstorage.blob.core.windows.net/media/img/post1c.png).\r\n\r\nAfter you've done that, run the following:\r\n\r\n(5). to convert our models to something more readable to SQL run `python manage.py makemigrations`\r\n\r\n(6). to migrate those SQL scripts to our database run `python manage.py migrate`. \r\n\r\n(7). finally run `python manage.py runserver` to run you application on localhost. navigate to `127.0.0.1:8000` on your browser and you will see a page like this:\r\n\r\n![Project Structure](https://mydjangoaccountstorage.blob.core.windows.net/media/img/post1d.png).\r\n\r\nCongratulations!! you've set up your first django project project.",
    "publish": "2020-06-28T20:16:34Z",
    "created": "2020-06-28T20:40:05.284Z",
    "updated": "2020-06-28T22:50:13.175Z",
    "status": "published"
  }
}
]
